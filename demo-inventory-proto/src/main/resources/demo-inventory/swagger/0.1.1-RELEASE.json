{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "demo-inventory-proto",
    "description" : "proto lib of  inventory control module",
    "contact" : {
      "name" : "developer@apihug.com",
      "url" : "https://github.com/apihug/",
      "email" : "developer@apihug.com"
    },
    "version" : "0.1.1-RELEASE"
  },
  "externalDocs" : {
    "description" : "Hope is the best thing",
    "url" : "https://github.com/apihug/"
  },
  "tags" : [ {
    "name" : "sample",
    "description" : "Sample Tag"
  } ],
  "paths" : {
    "/inventory/admin/hello-world" : {
      "get" : {
        "tags" : [ "project" ],
        "summary" : "",
        "description" : "hello from the inventory admin",
        "operationId" : "InventoryAdminService#SayHello",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "hello from the inventory admin",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "返回码,零成功,非零失败"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "返回提示信息"
                    },
                    "errors" : {
                      "type" : "array",
                      "description" : "错误详情列表",
                      "items" : {
                        "$ref" : "#/components/schemas/Error"
                      },
                      "title" : "errors"
                    },
                    "data" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.inventory.wire.api.admin.InventoryAdminService",
          "priority" : "HIGH",
          "group" : "CUSTOMER",
          "security" : {
            "lowLimitRiskyMode" : "ANONYMOUS"
          }
        }
      }
    },
    "/inventory/admin/stock-in" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "put good to the stock",
        "operationId" : "InventoryAdminService#StockIn",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/StockInRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "put good to the stock",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockInResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.inventory.wire.api.admin.InventoryAdminService",
          "priority" : "MIDDLE",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "STOCK_IN" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/inventory/admin/stock-out" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "stock out to delivery the goods to customer",
        "operationId" : "InventoryAdminService#StockOut",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/StockOutRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "stock out to delivery the goods to customer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StockOutResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.inventory.wire.api.admin.InventoryAdminService",
          "priority" : "HIGH",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "STOCK_OUT" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/inventory/storage/admin/add-location" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "add a new location in the storage",
        "operationId" : "InventoryStorageService#AddStorageLocation",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/AddStorageLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "add a new location in the storage",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageLocationAddedResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.inventory.wire.api.storage.InventoryStorageService",
          "priority" : "CRITICAL",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "ADD_STORAGE_LOCATION" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/inventory/storage/admin/delete-location" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "delete a old location",
        "operationId" : "InventoryStorageService#DeleteStorageLocation",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/DeleteStorageLocationRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "delete a old location",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageLocationDeletedResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.inventory.wire.api.storage.InventoryStorageService",
          "priority" : "FATAL",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "DELETE_STORAGE_LOCATION" ],
            "combinator" : "AND"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Error" : {
        "type" : "object",
        "description" : "错误对象",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "错误码",
            "example" : 1000001001
          },
          "title" : {
            "type" : "string",
            "description" : "错误标题",
            "example" : "USER_NAME_EMPTY"
          },
          "description" : {
            "type" : "string",
            "description" : "错误描述",
            "example" : "user name should not be empty"
          },
          "descriptionZhCN" : {
            "type" : "string",
            "description" : "错误描述(中)",
            "example" : "用户名不可以为空"
          },
          "field" : {
            "type" : "string",
            "description" : "字段",
            "example" : "name"
          },
          "path" : {
            "type" : "string",
            "description" : "字段路径",
            "example" : "user.name"
          },
          "rejectedValue" : {
            "type" : "string",
            "description" : "输入值",
            "example" : "Jake.Bush"
          },
          "tips" : {
            "type" : "string",
            "description" : "使用提示",
            "example" : "价格必须是正数:1000.12"
          },
          "constraint" : {
            "type" : "string",
            "description" : "校验规则",
            "example" : "POSITIVE|NOT_EMPTY|REG_EXP"
          },
          "phase" : {
            "$ref" : "#/components/schemas/ProblemPhase",
            "description" : "错误阶段",
            "example" : "DOMAIN:表示在领域层"
          },
          "severity" : {
            "$ref" : "#/components/schemas/ProblemSeverity",
            "description" : "错误程度",
            "example" : "ERROR: 表示业务中断"
          },
          "domain" : {
            "type" : "string",
            "description" : "领域",
            "example" : "order"
          },
          "properties" : {
            "type" : "object",
            "description" : "其他属性(KV), flat to normal fields refer to the problem details of hope/spring",
            "example" : "扩展属性, Key-Value 对"
          }
        },
        "title" : "Error"
      },
      "ProblemSeverity" : {
        "default" : "LOW",
        "description" : "错误严重程度",
        "oneOf" : [ {
          "const" : "LOW",
          "description" : "Low",
          "example" : "LOW",
          "title" : "LOW",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "低,无影响"
        }, {
          "const" : "WARN",
          "description" : "Warn",
          "example" : "WARN",
          "title" : "WARN",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "警告,业务错误可重试"
        }, {
          "const" : "ERROR",
          "description" : "Error",
          "example" : "ERROR",
          "title" : "ERROR",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "错误,业务无法进行"
        }, {
          "const" : "FATAL",
          "description" : "Fatal",
          "example" : "FATAL",
          "title" : "FATAL",
          "x-hope-enum-item-code" : 8,
          "x-hope-enum-item-des-cn" : "灾难,数据破坏"
        } ],
        "title" : "ProblemSeverity",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemSeverity",
        "x-hope-enum-type" : "true"
      },
      "ProblemPhase" : {
        "default" : "CONTROLLER",
        "description" : "错误层次",
        "oneOf" : [ {
          "const" : "CONTROLLER",
          "description" : "Controller",
          "example" : "CONTROLLER",
          "title" : "CONTROLLER",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "表单层"
        }, {
          "const" : "SERVICE",
          "description" : "Service",
          "example" : "SERVICE",
          "title" : "SERVICE",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "服务层"
        }, {
          "const" : "DOMAIN",
          "description" : "Domain",
          "example" : "DOMAIN",
          "title" : "DOMAIN",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "领域层"
        } ],
        "title" : "ProblemPhase",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemPhase",
        "x-hope-enum-type" : "true"
      },
      "InventoryAuthorityEnum" : {
        "default" : "STOCK_IN",
        "description" : "Inventory authorities list",
        "oneOf" : [ {
          "const" : "STOCK_IN",
          "description" : "stock:in",
          "example" : "STOCK_IN",
          "title" : "STOCK_IN",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "Authority to stock in product"
        }, {
          "const" : "STOCK_OUT",
          "description" : "stock:out",
          "example" : "STOCK_OUT",
          "title" : "STOCK_OUT",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "Authority to stock out product"
        }, {
          "const" : "ADD_STORAGE_LOCATION",
          "description" : "stock:storage:add",
          "example" : "ADD_STORAGE_LOCATION",
          "title" : "ADD_STORAGE_LOCATION",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "Authority to add a new storage location"
        }, {
          "const" : "DELETE_STORAGE_LOCATION",
          "description" : "stock:storage:delete",
          "example" : "DELETE_STORAGE_LOCATION",
          "title" : "DELETE_STORAGE_LOCATION",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "Authority to delete a storage location"
        } ],
        "title" : "InventoryAuthorityEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.infra.settings.InventoryAuthorityEnum",
          "protoFrom" : "com/apihug/demo/inventory/proto/infra/settings/authority.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "StorageStatusEnum" : {
        "default" : "NORMAL",
        "description" : "status of a storage location status",
        "oneOf" : [ {
          "const" : "NORMAL",
          "description" : "normal",
          "example" : "NORMAL",
          "title" : "NORMAL",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "this storage is normal"
        }, {
          "const" : "BLOCKED",
          "description" : "blocked",
          "example" : "BLOCKED",
          "title" : "BLOCKED",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "this storage is blocked"
        } ],
        "title" : "StorageStatusEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.infra.settings.admin.StorageStatusEnum",
          "protoFrom" : "com/apihug/demo/inventory/proto/infra/settings/admin/constant.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "StockStatusEnum" : {
        "default" : "FAIL",
        "description" : "enum of the stock operation",
        "oneOf" : [ {
          "const" : "FAIL",
          "description" : "fail of stock operation",
          "example" : "FAIL",
          "title" : "FAIL",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "stock illegal"
        }, {
          "const" : "SUCCESS",
          "description" : "success just a sample",
          "example" : "SUCCESS",
          "title" : "SUCCESS",
          "x-hope-enum-item-code" : 0,
          "x-hope-enum-item-des-cn" : "sample"
        } ],
        "title" : "StockStatusEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.infra.settings.admin.StockStatusEnum",
          "protoFrom" : "com/apihug/demo/inventory/proto/infra/settings/admin/constant.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "StorageLocationAddedResponse" : {
        "type" : "object",
        "description" : "storage location added",
        "properties" : {
          "storageLocationId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this storage location",
            "example" : "11",
            "x-hope-validation-blank" : false
          },
          "name" : {
            "type" : "string",
            "description" : "name of the location",
            "example" : "A1-112-5B",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "remark" : {
            "type" : "string",
            "description" : "comment of this"
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.storage.response.StorageLocationAddedResponse",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/response/response.proto"
        }
      },
      "StorageLocationDeletedResponse" : {
        "type" : "object",
        "description" : "Storage location deleted",
        "properties" : {
          "storageLocationId" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "id of this storage location",
            "example" : "11"
          },
          "reason" : {
            "type" : "string",
            "description" : "reason of delete it",
            "example" : "no happy"
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.storage.response.StorageLocationDeletedResponse",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/response/response.proto"
        }
      },
      "AddStorageLocationRequest" : {
        "type" : "object",
        "description" : "Add a new storage location",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of the location",
            "example" : "A1-112-5B",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "remark" : {
            "type" : "string",
            "description" : "comment of this"
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.storage.request.AddStorageLocationRequest",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/request/request.proto"
        }
      },
      "DeleteStorageLocationRequest" : {
        "type" : "object",
        "description" : "delete a storage location",
        "properties" : {
          "storageLocationId" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "id of this storage location",
            "example" : "11"
          },
          "reason" : {
            "type" : "string",
            "description" : "reason of delete it",
            "example" : "no happy"
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.storage.request.DeleteStorageLocationRequest",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/storage/request/request.proto"
        }
      },
      "StockInResponse" : {
        "type" : "object",
        "description" : "Stock in response",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "sku of this product",
            "example" : "S1JSF0S0FA",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this load",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          },
          "totalQuantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "total left quality",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.admin.StockInResponse",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/response.proto"
        }
      },
      "StockOutResponse" : {
        "type" : "object",
        "description" : "Stock out response",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "sku of this product",
            "example" : "S1JSF0S0FA",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this load",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          },
          "orderId" : {
            "type" : "number",
            "format" : "int64",
            "default" : "111",
            "description" : "id of the order",
            "example" : "1111",
            "maximum" : 1.0,
            "minimum" : 7886.0
          },
          "successQuantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "success stock out quality",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          },
          "leftQuantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "stock left quality",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.admin.StockOutResponse",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/response.proto"
        }
      },
      "StockInRequest" : {
        "type" : "object",
        "description" : "Stock in request",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "sku of this product",
            "example" : "S1JSF0S0FA",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this load",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.admin.StockInRequest",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/request.proto"
        }
      },
      "StockOutRequest" : {
        "type" : "object",
        "description" : "Stock out request",
        "properties" : {
          "sku" : {
            "type" : "string",
            "description" : "sku of this product",
            "example" : "S1JSF0S0FA",
            "maxLength" : 32,
            "x-hope-validation-blank" : false,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this load",
            "example" : "11",
            "maximum" : 1.0,
            "minimum" : 9999.0
          },
          "orderId" : {
            "type" : "number",
            "format" : "int64",
            "default" : "111",
            "description" : "id of the order",
            "example" : "1111",
            "maximum" : 1.0,
            "minimum" : 7886.0
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.inventory.wire.api.admin.StockOutRequest",
          "protoFrom" : "com/apihug/demo/inventory/proto/api/admin/request.proto"
        }
      },
      "StockInResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/StockInResponse"
          }
        }
      },
      "StockOutResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/StockOutResponse"
          }
        }
      },
      "StorageLocationAddedResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/StorageLocationAddedResponse"
          }
        }
      },
      "StorageLocationDeletedResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/StorageLocationDeletedResponse"
          }
        }
      }
    },
    "responses" : { },
    "parameters" : {
      "PageRequest" : {
        "name" : "pageRequest",
        "in" : "query",
        "description" : "Page Request parameter",
        "schema" : {
          "type" : "object",
          "description" : "分页查询Parameter对象",
          "properties" : {
            "page" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Zero-based page index (0..N)",
              "minimum" : 0,
              "title" : "page"
            },
            "size" : {
              "type" : "integer",
              "format" : "int32",
              "default" : 20,
              "description" : "The size of the page to be returned",
              "maximum" : 1024,
              "minimum" : 1,
              "title" : "size"
            },
            "sort" : {
              "type" : "array",
              "description" : "Sorting criteria in the format: property,(asc|desc). \nDefault sort order is ascending. \nMultiple sort criteria are supported.",
              "items" : {
                "type" : "string"
              }
            }
          },
          "title" : "PageRequest"
        }
      }
    },
    "examples" : { },
    "requestBodies" : { },
    "headers" : { },
    "securitySchemes" : { },
    "links" : { },
    "callbacks" : { }
  },
  "x-hope-project" : {
    "artifact" : {
      "groupId" : "com.apihug",
      "artifactId" : "demo-inventory-proto",
      "version" : "0.1.1-RELEASE"
    },
    "name" : "demo-inventory-proto",
    "description" : "proto lib of  inventory control module",
    "application" : "demo-inventory",
    "packageName" : "com.apihug.demo.inventory",
    "type" : "PROTO",
    "domain" : "inventory",
    "identifier" : "demo-inventory-proto",
    "module" : "demo-inventory-proto",
    "status" : {
      "deprecated" : false,
      "createdTimestamp" : "2024-02-29",
      "createdBy" : "dell"
    },
    "persistence" : {
      "identifyType" : "LONG",
      "tenantType" : "LONG"
    },
    "authority" : {
      "enumClass" : "com.apihug.demo.inventory.wire.infra.settings.InventoryAuthorityEnum",
      "codePrefix" : 10240000
    }
  }
}