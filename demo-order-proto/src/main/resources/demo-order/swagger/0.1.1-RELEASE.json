{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "demo-order-proto",
    "description" : "proto lib of  demo for api hug framework and tools",
    "contact" : {
      "name" : "developer@apihug.com",
      "url" : "https://github.com/apihug/",
      "email" : "developer@apihug.com"
    },
    "version" : "0.1.1-RELEASE"
  },
  "externalDocs" : {
    "description" : "Hope is the best thing",
    "url" : "https://github.com/apihug/"
  },
  "tags" : [ {
    "name" : "sample",
    "description" : "Sample Tag"
  } ],
  "paths" : {
    "/order/admin/add-order" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "add order",
        "operationId" : "OrderAdminService#AddOrder",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/AddOrderRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "add order",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderAddedResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.order.wire.api.admin.OrderAdminService",
          "priority" : "FATAL",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "ORDER_ADD" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/order/admin/delete-order" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "delete order ",
        "operationId" : "OrderAdminService#DeleteOrder",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/DeleteOrderRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "delete order ",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OrderDeletedResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.order.wire.api.admin.OrderAdminService",
          "priority" : "MIDDLE",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "ORDER_ADD", "ORDER_DELETE" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/order/admin/hello-world" : {
      "get" : {
        "tags" : [ "project" ],
        "summary" : "",
        "description" : "hello from the admin server",
        "operationId" : "OrderAdminService#SayHello",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "hello from the admin server",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "返回码,零成功,非零失败"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "返回提示信息"
                    },
                    "errors" : {
                      "type" : "array",
                      "description" : "错误详情列表",
                      "items" : {
                        "$ref" : "#/components/schemas/Error"
                      },
                      "title" : "errors"
                    },
                    "data" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.order.wire.api.admin.OrderAdminService",
          "priority" : "HIGH",
          "group" : "CUSTOMER",
          "security" : {
            "lowLimitRiskyMode" : "ANONYMOUS"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddOrderRequest" : {
        "type" : "object",
        "description" : "Add order",
        "properties" : {
          "skuId" : {
            "type" : "string",
            "description" : "SKU of the product",
            "example" : "XSK12MADA",
            "maxLength" : 32,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this oder",
            "example" : "1",
            "maximum" : 1.0,
            "minimum" : 122.0,
            "x-hope-mock" : {
              "max" : 122,
              "min" : 1,
              "name" : "number"
            }
          }
        },
        "required" : [ "skuId" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.api.admin.request.AddOrderRequest",
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/request/request.proto"
        }
      },
      "DeleteOrderRequest" : {
        "type" : "object",
        "description" : "delete the order by ID",
        "properties" : {
          "orderId" : {
            "type" : "number",
            "format" : "int64",
            "default" : "111",
            "description" : "id of this order",
            "example" : "111",
            "maximum" : 1.0,
            "x-hope-mock" : {
              "max" : 2321313,
              "min" : 1,
              "name" : "number"
            }
          },
          "reason" : {
            "type" : "string",
            "description" : "reason why delete this order",
            "example" : "wrong placed",
            "maxLength" : 122,
            "minLength" : 5,
            "x-hope-validation-blank" : false
          }
        },
        "required" : [ "reason" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.api.admin.request.DeleteOrderRequest",
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/request/request.proto"
        }
      },
      "Error" : {
        "type" : "object",
        "description" : "错误对象",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "错误码",
            "example" : 1000001001
          },
          "title" : {
            "type" : "string",
            "description" : "错误标题",
            "example" : "USER_NAME_EMPTY"
          },
          "description" : {
            "type" : "string",
            "description" : "错误描述",
            "example" : "user name should not be empty"
          },
          "description2" : {
            "type" : "string",
            "description" : "错误描述(中)",
            "example" : "用户名不可以为空"
          },
          "field" : {
            "type" : "string",
            "description" : "字段",
            "example" : "name"
          },
          "path" : {
            "type" : "string",
            "description" : "字段路径",
            "example" : "user.name"
          },
          "rejectedValue" : {
            "type" : "string",
            "description" : "输入值",
            "example" : "Jake.Bush"
          },
          "tips" : {
            "type" : "string",
            "description" : "使用提示",
            "example" : "价格必须是正数:1000.12"
          },
          "constraint" : {
            "type" : "string",
            "description" : "校验规则",
            "example" : "POSITIVE|NOT_EMPTY|REG_EXP"
          },
          "phase" : {
            "$ref" : "#/components/schemas/ProblemPhase",
            "description" : "错误阶段",
            "example" : "DOMAIN:表示在领域层"
          },
          "severity" : {
            "$ref" : "#/components/schemas/ProblemSeverity",
            "description" : "错误程度",
            "example" : "ERROR: 表示业务中断"
          },
          "domain" : {
            "type" : "string",
            "description" : "领域",
            "example" : "order"
          },
          "properties" : {
            "type" : "object",
            "description" : "其他属性(KV), flat to normal fields refer to the problem details of hope/spring",
            "example" : "扩展属性, Key-Value 对"
          }
        },
        "title" : "Error"
      },
      "OrderAddedResponse" : {
        "type" : "object",
        "description" : "Order placed already",
        "properties" : {
          "orderId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this order",
            "example" : "111"
          },
          "skuId" : {
            "type" : "string",
            "description" : "SKU of the product",
            "example" : "XSK12MADA",
            "maxLength" : 32,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "quantity" : {
            "type" : "number",
            "format" : "int64",
            "default" : "1",
            "description" : "quantity of this oder",
            "example" : "1",
            "maximum" : 1.0,
            "minimum" : 122.0,
            "x-hope-mock" : {
              "max" : 122,
              "min" : 1,
              "name" : "number"
            }
          }
        },
        "required" : [ "skuId" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.api.admin.response.OrderAddedResponse",
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/response/response.proto"
        }
      },
      "OrderAddedResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/OrderAddedResponse"
          }
        }
      },
      "OrderAuthorityEnum" : {
        "default" : "ORDER_ADD",
        "description" : "Example Authority Enum for the project, MODIFY IT",
        "oneOf" : [ {
          "const" : "ORDER_ADD",
          "description" : "order:add",
          "example" : "ORDER_ADD",
          "title" : "ORDER_ADD",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "Authority to add order by admin"
        }, {
          "const" : "ORDER_DELETE",
          "description" : "order:remove",
          "example" : "ORDER_DELETE",
          "title" : "ORDER_DELETE",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "Authority to delete order by admin"
        } ],
        "title" : "OrderAuthorityEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.infra.settings.OrderAuthorityEnum",
          "protoFrom" : "com/apihug/demo/order/proto/infra/settings/authority.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "OrderDeletedResponse" : {
        "type" : "object",
        "description" : "order deleted response",
        "properties" : {
          "orderId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this order",
            "example" : "1111"
          },
          "reason" : {
            "type" : "string",
            "description" : "deleted reason",
            "example" : "wrong"
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.api.admin.response.OrderDeletedResponse",
          "protoFrom" : "com/apihug/demo/order/proto/api/admin/response/response.proto"
        }
      },
      "OrderDeletedResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/OrderDeletedResponse"
          }
        }
      },
      "OrderStatusEnum" : {
        "default" : "NORMAL",
        "description" : "Status of the order",
        "oneOf" : [ {
          "const" : "NORMAL",
          "description" : "normal status",
          "example" : "NORMAL",
          "title" : "NORMAL",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "order is ok"
        }, {
          "const" : "DELETED",
          "description" : "deleted status",
          "example" : "DELETED",
          "title" : "DELETED",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "order is gone"
        } ],
        "title" : "OrderStatusEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.order.wire.infra.settings.admin.OrderStatusEnum",
          "protoFrom" : "com/apihug/demo/order/proto/infra/settings/admin/constant.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "ProblemPhase" : {
        "default" : "CONTROLLER",
        "description" : "错误层次",
        "oneOf" : [ {
          "const" : "CONTROLLER",
          "description" : "Controller",
          "example" : "CONTROLLER",
          "title" : "CONTROLLER",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "表单层"
        }, {
          "const" : "SERVICE",
          "description" : "Service",
          "example" : "SERVICE",
          "title" : "SERVICE",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "服务层"
        }, {
          "const" : "DOMAIN",
          "description" : "Domain",
          "example" : "DOMAIN",
          "title" : "DOMAIN",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "领域层"
        } ],
        "title" : "ProblemPhase",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemPhase",
        "x-hope-enum-type" : "true"
      },
      "ProblemSeverity" : {
        "default" : "LOW",
        "description" : "错误严重程度",
        "oneOf" : [ {
          "const" : "LOW",
          "description" : "Low",
          "example" : "LOW",
          "title" : "LOW",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "低,无影响"
        }, {
          "const" : "WARN",
          "description" : "Warn",
          "example" : "WARN",
          "title" : "WARN",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "警告,业务错误可重试"
        }, {
          "const" : "ERROR",
          "description" : "Error",
          "example" : "ERROR",
          "title" : "ERROR",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "错误,业务无法进行"
        }, {
          "const" : "FATAL",
          "description" : "Fatal",
          "example" : "FATAL",
          "title" : "FATAL",
          "x-hope-enum-item-code" : 8,
          "x-hope-enum-item-des-cn" : "灾难,数据破坏"
        } ],
        "title" : "ProblemSeverity",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemSeverity",
        "x-hope-enum-type" : "true"
      }
    },
    "responses" : { },
    "parameters" : {
      "PageRequest" : {
        "name" : "pageRequest",
        "in" : "query",
        "description" : "Page Request parameter",
        "schema" : {
          "type" : "object",
          "description" : "分页查询Parameter对象",
          "properties" : {
            "page" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Zero-based page index (0..N)",
              "minimum" : 0,
              "title" : "page"
            },
            "size" : {
              "type" : "integer",
              "format" : "int32",
              "default" : 20,
              "description" : "The size of the page to be returned",
              "maximum" : 1024,
              "minimum" : 1,
              "title" : "size"
            },
            "sort" : {
              "type" : "array",
              "description" : "Sorting criteria in the format: property,(asc|desc). \nDefault sort order is ascending. \nMultiple sort criteria are supported.",
              "items" : {
                "type" : "string"
              }
            }
          },
          "title" : "PageRequest"
        }
      }
    },
    "examples" : { },
    "requestBodies" : { },
    "headers" : { },
    "securitySchemes" : { },
    "links" : { },
    "callbacks" : { }
  },
  "x-hope-project" : {
    "artifact" : {
      "groupId" : "com.apihug",
      "artifactId" : "demo-order-proto",
      "version" : "0.1.1-RELEASE"
    },
    "name" : "demo-order-proto",
    "description" : "proto lib of  demo for api hug framework and tools",
    "application" : "demo-order",
    "packageName" : "com.apihug.demo.order",
    "type" : "PROTO",
    "domain" : "order",
    "identifier" : "demo-order-proto",
    "module" : "demo-order-proto",
    "status" : {
      "deprecated" : false,
      "createdTimestamp" : "2024-02-29",
      "createdBy" : "dell"
    },
    "persistence" : {
      "identifyType" : "LONG",
      "tenantType" : "LONG"
    },
    "authority" : {
      "enumClass" : "com.apihug.demo.order.wire.infra.settings.OrderAuthorityEnum",
      "codePrefix" : 10240000
    }
  }
}