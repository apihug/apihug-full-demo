{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "demo-user-proto",
    "description" : "proto lib of  user management module",
    "contact" : {
      "name" : "developer@apihug.com",
      "url" : "https://github.com/apihug/",
      "email" : "developer@apihug.com"
    },
    "version" : "0.1.1-RELEASE"
  },
  "externalDocs" : {
    "description" : "Hope is the best thing",
    "url" : "https://github.com/apihug/"
  },
  "tags" : [ {
    "name" : "sample",
    "description" : "Sample Tag"
  } ],
  "paths" : {
    "/user/admin/change-password" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "use to reset the password after password forgot",
        "operationId" : "UserAdminService#ChangePassword",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "use to reset the password after password forgot",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerPasswordUpdatedResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.user.wire.api.admin.UserAdminService",
          "priority" : "HIGH",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "USER_ADD", "USER_DELETE" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/user/admin/register" : {
      "post" : {
        "tags" : [ ],
        "summary" : "",
        "description" : "admin try to register a new customer",
        "operationId" : "UserAdminService#RegisterCustomer",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "$ref" : "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "admin try to register a new customer",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CustomerRegisteredResponseResult"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.user.wire.api.admin.UserAdminService",
          "priority" : "CRITICAL",
          "group" : "CUSTOMER",
          "security" : {
            "authorities" : [ "USER_ADD" ],
            "combinator" : "AND"
          }
        }
      }
    },
    "/user/admin/say-hello" : {
      "get" : {
        "tags" : [ "project" ],
        "summary" : "",
        "description" : "Hello from the user admin server",
        "operationId" : "UserAdminService#SayHello",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Hello from the user admin server",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "code" : {
                      "type" : "integer",
                      "format" : "int32",
                      "description" : "返回码,零成功,非零失败"
                    },
                    "message" : {
                      "type" : "string",
                      "description" : "返回提示信息"
                    },
                    "errors" : {
                      "type" : "array",
                      "description" : "错误详情列表",
                      "items" : {
                        "$ref" : "#/components/schemas/Error"
                      },
                      "title" : "errors"
                    },
                    "data" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ],
        "x-hope-operation" : {
          "deprecated" : false,
          "wrapper" : true,
          "inputPlural" : false,
          "outputPlural" : false,
          "pageable" : false,
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/api.proto",
          "empty" : false,
          "serviceClz" : "com.apihug.demo.user.wire.api.admin.UserAdminService",
          "priority" : "MIDDLE",
          "group" : "CUSTOMER",
          "security" : {
            "lowLimitRiskyMode" : "ANONYMOUS"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ChangePasswordRequest" : {
        "type" : "object",
        "description" : "Change my password request",
        "properties" : {
          "customerId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this customer"
          },
          "newPassword" : {
            "type" : "string",
            "description" : "new password",
            "maxLength" : 32,
            "minLength" : 5,
            "x-hope-validation-blank" : false
          },
          "reason" : {
            "type" : "string",
            "description" : "reason of change the password",
            "example" : "password stolen"
          }
        },
        "required" : [ "customerId", "newPassword" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.api.admin.request.ChangePasswordRequest",
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/request/request.proto"
        }
      },
      "CustomerPasswordUpdatedResponse" : {
        "type" : "object",
        "description" : "password updated response",
        "properties" : {
          "customerId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this customer",
            "example" : "1024",
            "x-hope-mock" : {
              "max" : 12000,
              "min" : 12,
              "name" : "number"
            }
          },
          "updatedDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date of this password updated",
            "x-hope-field-alias" : {
              "predefinedDateFormat" : "YYYY_MM_DD_HH_MM_SS"
            },
            "x-hope-mock" : {
              "timeGap" : 2,
              "dir" : "PAST",
              "timeUnit" : "MINUTES",
              "name" : "date"
            }
          }
        },
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.api.admin.response.CustomerPasswordUpdatedResponse",
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/response/response.proto"
        }
      },
      "CustomerPasswordUpdatedResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/CustomerPasswordUpdatedResponse"
          }
        }
      },
      "CustomerRegisteredResponse" : {
        "type" : "object",
        "description" : "customer registered successfully",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of the user",
            "example" : "My Lord",
            "maxLength" : 32,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "customerId" : {
            "type" : "number",
            "format" : "int64",
            "description" : "id of this customer",
            "example" : "1024",
            "x-hope-validation-blank" : false
          },
          "registerDate" : {
            "type" : "string",
            "format" : "date-time",
            "description" : "date of registered",
            "x-hope-field-alias" : {
              "predefinedDateFormat" : "YYYY_MM_DD_HH_MM_SS"
            },
            "x-hope-mock" : {
              "timeGap" : 2,
              "dir" : "PAST",
              "timeUnit" : "MINUTES",
              "name" : "date"
            }
          }
        },
        "required" : [ "customerId", "name" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.api.admin.response.CustomerRegisteredResponse",
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/response/response.proto"
        }
      },
      "CustomerRegisteredResponseResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "返回码,零成功,非零失败"
          },
          "message" : {
            "type" : "string",
            "description" : "返回提示信息"
          },
          "errors" : {
            "type" : "array",
            "description" : "错误详情列表",
            "items" : {
              "$ref" : "#/components/schemas/Error"
            },
            "title" : "errors"
          },
          "data" : {
            "$ref" : "#/components/schemas/CustomerRegisteredResponse"
          }
        }
      },
      "Error" : {
        "type" : "object",
        "description" : "错误对象",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "错误码",
            "example" : 1000001001
          },
          "title" : {
            "type" : "string",
            "description" : "错误标题",
            "example" : "USER_NAME_EMPTY"
          },
          "description" : {
            "type" : "string",
            "description" : "错误描述",
            "example" : "user name should not be empty"
          },
          "descriptionZhCN" : {
            "type" : "string",
            "description" : "错误描述(中)",
            "example" : "用户名不可以为空"
          },
          "field" : {
            "type" : "string",
            "description" : "字段",
            "example" : "name"
          },
          "path" : {
            "type" : "string",
            "description" : "字段路径",
            "example" : "user.name"
          },
          "rejectedValue" : {
            "type" : "string",
            "description" : "输入值",
            "example" : "Jake.Bush"
          },
          "tips" : {
            "type" : "string",
            "description" : "使用提示",
            "example" : "价格必须是正数:1000.12"
          },
          "constraint" : {
            "type" : "string",
            "description" : "校验规则",
            "example" : "POSITIVE|NOT_EMPTY|REG_EXP"
          },
          "phase" : {
            "$ref" : "#/components/schemas/ProblemPhase",
            "description" : "错误阶段",
            "example" : "DOMAIN:表示在领域层"
          },
          "severity" : {
            "$ref" : "#/components/schemas/ProblemSeverity",
            "description" : "错误程度",
            "example" : "ERROR: 表示业务中断"
          },
          "domain" : {
            "type" : "string",
            "description" : "领域",
            "example" : "order"
          },
          "properties" : {
            "type" : "object",
            "description" : "其他属性(KV), flat to normal fields refer to the problem details of hope/spring",
            "example" : "扩展属性, Key-Value 对"
          }
        },
        "title" : "Error"
      },
      "ExampleEnum" : {
        "default" : "EXAMPLE_ENUM_GOOD",
        "description" : "Example Enum",
        "oneOf" : [ {
          "const" : "EXAMPLE_ENUM_GOOD",
          "description" : "GOOD",
          "example" : "EXAMPLE_ENUM_GOOD",
          "title" : "EXAMPLE_ENUM_GOOD",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "you are good man"
        }, {
          "const" : "EXAMPLE_ENUM_BAD",
          "description" : "BAD",
          "example" : "EXAMPLE_ENUM_BAD",
          "title" : "EXAMPLE_ENUM_BAD",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "you are bad man"
        } ],
        "title" : "ExampleEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.infra.settings.sample.ExampleEnum",
          "protoFrom" : "com/apihug/demo/user/proto/infra/settings/sample/constant.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "ExampleHappyLevelEnum" : {
        "default" : "SAD",
        "description" : "a happy lavel of a demo",
        "oneOf" : [ {
          "const" : "SAD",
          "description" : "very sad",
          "example" : "SAD",
          "title" : "SAD",
          "x-hope-enum-item-code" : 0,
          "x-hope-enum-item-des-cn" : "sad is bad"
        }, {
          "const" : "HAPPY",
          "description" : "very happy",
          "example" : "HAPPY",
          "title" : "HAPPY",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "happy is good"
        }, {
          "const" : "SUPER_HAPPY",
          "description" : "happiest",
          "example" : "SUPER_HAPPY",
          "title" : "SUPER_HAPPY",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "happy best"
        } ],
        "title" : "ExampleHappyLevelEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.infra.settings.sample.ExampleHappyLevelEnum",
          "protoFrom" : "com/apihug/demo/user/proto/infra/settings/sample/constant.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "ProblemPhase" : {
        "default" : "CONTROLLER",
        "description" : "错误层次",
        "oneOf" : [ {
          "const" : "CONTROLLER",
          "description" : "Controller",
          "example" : "CONTROLLER",
          "title" : "CONTROLLER",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "表单层"
        }, {
          "const" : "SERVICE",
          "description" : "Service",
          "example" : "SERVICE",
          "title" : "SERVICE",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "服务层"
        }, {
          "const" : "DOMAIN",
          "description" : "Domain",
          "example" : "DOMAIN",
          "title" : "DOMAIN",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "领域层"
        } ],
        "title" : "ProblemPhase",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemPhase",
        "x-hope-enum-type" : "true"
      },
      "ProblemSeverity" : {
        "default" : "LOW",
        "description" : "错误严重程度",
        "oneOf" : [ {
          "const" : "LOW",
          "description" : "Low",
          "example" : "LOW",
          "title" : "LOW",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "低,无影响"
        }, {
          "const" : "WARN",
          "description" : "Warn",
          "example" : "WARN",
          "title" : "WARN",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "警告,业务错误可重试"
        }, {
          "const" : "ERROR",
          "description" : "Error",
          "example" : "ERROR",
          "title" : "ERROR",
          "x-hope-enum-item-code" : 4,
          "x-hope-enum-item-des-cn" : "错误,业务无法进行"
        }, {
          "const" : "FATAL",
          "description" : "Fatal",
          "example" : "FATAL",
          "title" : "FATAL",
          "x-hope-enum-item-code" : 8,
          "x-hope-enum-item-des-cn" : "灾难,数据破坏"
        } ],
        "title" : "ProblemSeverity",
        "x-hope-java-class" : "hope.common.wire.constant.ProblemSeverity",
        "x-hope-enum-type" : "true"
      },
      "RegisterRequest" : {
        "type" : "object",
        "description" : "Register a user",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of the user",
            "example" : "My Lord",
            "maxLength" : 32,
            "x-hope-mock" : {
              "nature" : "NAME",
              "name" : "nature"
            }
          },
          "email" : {
            "type" : "string",
            "format" : "email",
            "description" : "email address of this user",
            "x-hope-validation" : {
              "email" : true
            }
          },
          "password" : {
            "type" : "string",
            "description" : "password of this account",
            "maxLength" : 32,
            "minLength" : 5,
            "x-hope-validation-blank" : false
          }
        },
        "required" : [ "name", "password" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.api.admin.request.RegisterRequest",
          "protoFrom" : "com/apihug/demo/user/proto/api/admin/request/request.proto"
        }
      },
      "RequiredDemoRequest" : {
        "type" : "object",
        "description" : "This is an example request",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "name of the user",
            "example" : "My Lord"
          },
          "another" : {
            "type" : "string",
            "description" : "another not blank sample",
            "example" : "another not blank",
            "x-hope-validation-blank" : false
          },
          "anAnother" : {
            "type" : "string",
            "description" : "another min length example",
            "example" : "another min length",
            "minLength" : 2
          },
          "hiddenField" : {
            "type" : "number",
            "format" : "int64",
            "description" : "do not touch me directly you can not see me",
            "example" : "1024",
            "readOnly" : true
          }
        },
        "required" : [ "anAnother", "another", "name" ],
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.api.sample.RequiredDemoRequest",
          "protoFrom" : "com/apihug/demo/user/proto/api/sample/sample.proto"
        }
      },
      "UserAuthorityEnum" : {
        "default" : "USER_ADD",
        "description" : "User domain's authorities list",
        "oneOf" : [ {
          "const" : "USER_ADD",
          "description" : "user:add",
          "example" : "USER_ADD",
          "title" : "USER_ADD",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "Authority to remove user"
        }, {
          "const" : "USER_DELETE",
          "description" : "user:remove",
          "example" : "USER_DELETE",
          "title" : "USER_DELETE",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "Authority to delete user"
        } ],
        "title" : "UserAuthorityEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.infra.settings.UserAuthorityEnum",
          "protoFrom" : "com/apihug/demo/user/proto/infra/settings/authority.proto"
        },
        "x-hope-enum-type" : "true"
      },
      "UserStatusEnum" : {
        "default" : "NORMAL",
        "description" : "User management status",
        "oneOf" : [ {
          "const" : "NORMAL",
          "description" : "normal",
          "example" : "NORMAL",
          "title" : "NORMAL",
          "x-hope-enum-item-code" : 1,
          "x-hope-enum-item-des-cn" : "user normal status"
        }, {
          "const" : "BLOCKED",
          "description" : "blocked",
          "example" : "BLOCKED",
          "title" : "BLOCKED",
          "x-hope-enum-item-code" : 2,
          "x-hope-enum-item-des-cn" : "user blocked"
        } ],
        "title" : "UserStatusEnum",
        "x-hope-rt-meta" : {
          "clz" : "com.apihug.demo.user.wire.infra.settings.admin.UserStatusEnum",
          "protoFrom" : "com/apihug/demo/user/proto/infra/settings/admin/constant.proto"
        },
        "x-hope-enum-type" : "true"
      }
    },
    "responses" : { },
    "parameters" : {
      "PageRequest" : {
        "name" : "pageRequest",
        "in" : "query",
        "description" : "Page Request parameter",
        "schema" : {
          "type" : "object",
          "description" : "分页查询Parameter对象",
          "properties" : {
            "page" : {
              "type" : "integer",
              "format" : "int32",
              "description" : "Zero-based page index (0..N)",
              "minimum" : 0,
              "title" : "page"
            },
            "size" : {
              "type" : "integer",
              "format" : "int32",
              "default" : 20,
              "description" : "The size of the page to be returned",
              "maximum" : 1024,
              "minimum" : 1,
              "title" : "size"
            },
            "sort" : {
              "type" : "array",
              "description" : "Sorting criteria in the format: property,(asc|desc). \nDefault sort order is ascending. \nMultiple sort criteria are supported.",
              "items" : {
                "type" : "string"
              }
            }
          },
          "title" : "PageRequest"
        }
      }
    },
    "examples" : { },
    "requestBodies" : { },
    "headers" : { },
    "securitySchemes" : { },
    "links" : { },
    "callbacks" : { }
  },
  "x-hope-project" : {
    "artifact" : {
      "groupId" : "com.apihug",
      "artifactId" : "demo-user-proto",
      "version" : "0.1.1-RELEASE"
    },
    "name" : "demo-user-proto",
    "description" : "proto lib of  user management module",
    "application" : "demo-user",
    "packageName" : "com.apihug.demo.user",
    "type" : "PROTO",
    "domain" : "user",
    "identifier" : "demo-user-proto",
    "module" : "demo-user-proto",
    "status" : {
      "deprecated" : false,
      "createdTimestamp" : "2024-02-29",
      "createdBy" : "dell"
    },
    "persistence" : {
      "identifyType" : "LONG",
      "tenantType" : "LONG"
    },
    "authority" : {
      "enumClass" : "com.apihug.demo.user.wire.infra.settings.UserAuthorityEnum",
      "codePrefix" : 10240000
    }
  }
}