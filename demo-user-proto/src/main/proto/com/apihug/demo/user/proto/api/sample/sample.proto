syntax = "proto3";

package com.apihug.demo.user.proto.api.sample;

import "extend/domain.proto";
import "swagger/annotations.proto";

option (hope.domain.kind) = BEAN;


message RequiredDemoRequest {
  option (hope.swagger.schema) = {
    json_schema: {
      description: "This is an example request";
    };
  };

  string name = 1 [(hope.swagger.field) = {
    description: "name of the user";
    example: "My Lord"
    empty: FALSE
  }];

  string another = 2 [(hope.swagger.field) = {
    description: "another not blank sample";
    example: "another not blank"
    blank: FALSE
  }];

  string an_another = 3 [(hope.swagger.field) = {
    description: "another min length example";
    example: "another min length"
    min_length:{
      value: 2
    }
  }];

  uint64 hidden_field = 4 [(hope.swagger.field) = {
    description: "do not touch me directly you can not see me";
    example: "1024"
    read_only: true
  }];


  string my_son_name = 5 [(hope.swagger.field) = {
    description: "name of my son";
    blank: FALSE;
    mock:{
      chinese_name_rule:{
        type: NAME
      }
    }
  }];

}

message QueryResultDemoResponse {

  option (hope.swagger.schema) = {
    json_schema: {
      description: "demo for return query result";
    };
  };

  string name = 1 [(hope.swagger.field) = {
    description: "name of god";
  }];

  string remark = 2 [(hope.swagger.field) = {
    description: "remark of the name";
  }];

  string jake_name = 7 [(hope.swagger.field) = {
    description: "name of the user";
    example: "aaron";
    blank: FALSE;
    max_length:{
      value:32;
    }
    min_length:{
      value:2;
    }
    mock:{
      chinese_name_rule:{
        type: NAME
      }
    }
  }];


}
